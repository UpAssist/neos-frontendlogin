UpAssist.Neos.FrontendLogin.UserController.resetPassword = Neos.Fusion:Component {

  login = Neos.Fusion:UriBuilder {
    package = 'UpAssist.Neos.FrontendLogin'
    controller = 'Login'
    action = 'login'
  }

  labels = Neos.Fusion:DataStructure {
    legend = ${I18n.translate('action.resetPassword.label.legend', null, [user.name],'Main', 'UpAssist.Neos.FrontendLogin')}
    login = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.label.login')}
    email = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.label.email')}
    tooltip = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.tooltip.email')}
    password = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.label.password')}
    passwordRepeat = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.label.passwordRepeat')}
    submit = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.button.submit')}
    submitPasswords = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.button.submitPasswords')}
  }

  messages = Neos.Fusion:DataStructure {
    error = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.messages.error')}
    accountNotFound = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.messages.accountNotFound')}
    emailSent = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.messages.emailSent')}
    invalidToken = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.messages.invalidToken')}
    success = ${I18n.translate('UpAssist.Neos.FrontendLogin:Main:action.resetPassword.messages.success')}
  }

  renderer = afx`
    <UpAssist.Neos.FrontendLogin:Component.Molecule.FlashMessages flashMessages={flashMessages} />
    <p class="error" @if={errors}>
      {props.messages.error}
    </p>

    <p class="error"  @if={status == 'accountNotFound'}>
      {props.messages.accountNotFound}
    </p>

    <p class="success"  @if={status == 'emailSent'}>
      {props.messages.emailSent}
    </p>

    <p class="error"  @if={status == 'invalidToken'}>
      {props.messages.invalidToken}
    </p>

    <p class="success"  @if={status == 'success'}>
      {props.messages.success} <a href={props.login}>{props.labels.login}</a>
    </p>

    <Neos.Fusion.Form:Form
      form.target.controller="User"
      form.target.action="sendPasswordResetEmail"
      @if={!user && !status}
    >
      <fieldset class="password-reset">
        <Neos.Fusion.Form:FieldContainer field.name="emailAddress" label={props.labels.email}>
          <Neos.Fusion.Form:Input/>
        </Neos.Fusion.Form:FieldContainer>
        <span class="password-reset__tooltip">{props.labels.tooltip}</span>
      </fieldset>
      <Neos.Fusion.Form:Button type="submit">{props.labels.submit}</Neos.Fusion.Form:Button>
    </Neos.Fusion.Form:Form>

    <Neos.Fusion:Fragment @if={user}>
      <Neos.Fusion.Form:Form
        form.target.action="updatePassword"
        form.target.controller="User"
        form.data.newPassword={newPassword}
      >
        <legend>{props.labels.legend}</legend>
        <Neos.Fusion.Form:Hidden field.name="newPassword[user]" field.value={user}/>
        <Neos.Fusion.Form:FieldContainer field.name="newPassword[password][0]" label={props.labels.password}>
          <Neos.Fusion.Form:Input attributes.type="password" attributes.class={errors ? 'error' : null} />
        </Neos.Fusion.Form:FieldContainer>
        <Neos.Fusion.Form:FieldContainer field.name="newPassword[password][1]" label={props.labels.passwordRepeat}>
          <Neos.Fusion.Form:Input attributes.type="password" attributes.class={errors ? 'error' : null} />
        </Neos.Fusion.Form:FieldContainer>
        <Neos.Fusion.Form:Button>{props.labels.submitPasswords}</Neos.Fusion.Form:Button>
      </Neos.Fusion.Form:Form>
    </Neos.Fusion:Fragment>
  `
}
